Flow org.gluu.agama.typekey
     Basepath ""
Log "@info " Starting typekey authentication
idp = Call org.gluu.agama.typekey.IdentityProcessor#new 
tk = Call org.gluu.agama.typekey.Typekey#new conf
user = RRF "typekey/username.ftlh" 
userData = Call idp accountFromUsername user.username
When userData.empty is true
     it_lkskf = {success:false, error: "User not found"}
     Finish it_lkskf
enrolled = Call idp enrolled user.username
When enrolled is false
     random_usecase = Call tk getRandomUseCase 
     phrase_map = Call tk generateTypekeyData random_usecase
     dummy = Call idp enroll user.username phrase_map
     phrase = phrase_map.phrase
     use_case = random_usecase
When enrolled is true
     typekey_data = Call idp getTypekeyData user.username
     phrase = typekey_data.phrase
     use_case = typekey_data.useCase
phraseDict = {phrase:phrase}
phraseData = RRF "typekey/phrase.ftlh" phraseDict
typekey_result = Call tk validateKeystrokes user.username phraseData.phrase_data use_case
When typekey_result.status is "Enrollment"
     password = RRF "typekey/password.ftlh" 
     authenticated = Call idp authenticate user.username password.pwd
     When authenticated is true
          Call tk notifyKeystrokes user.username typekey_result.track_id
          it_fgqac = {success:true, data: { userId: user.username}}
          Finish it_fgqac
     it_jlnie = {success:false, error: "Authentication failed"}
     Finish it_jlnie
When typekey_result.status is "Approved"
     it_qjxax = {success:true, data: { userId: user.username}}
     Finish it_qjxax
password = RRF "typekey/password.ftlh" 
authenticated = Call idp authenticate user.username password.pwd
When authenticated is true
     Call tk notifyKeystrokes user.username typekey_result.track_id
     it_fahme = {success:true, data: { userId: user.username}}
     Finish it_fahme
it_bvmos = {success:false, error: "Password and typekey failed"}
Finish it_bvmos